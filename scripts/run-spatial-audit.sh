#!/bin/bash

# Spatial Performance Audit Runner
# Generated by database-spatial-agent

echo "üîç Starting GIS Platform Spatial Performance Audit..."
echo "================================================="

# Check if required dependencies are available
command -v ts-node >/dev/null 2>&1 || { 
    echo "‚ùå ts-node is required but not installed. Install with: npm install -g ts-node"
    exit 1
}

# Create reports directory if it doesn't exist
mkdir -p reports

# Set environment variables if not set
if [ -z "$DATABASE_URL" ]; then
    echo "‚ö†Ô∏è DATABASE_URL not set, using default from .env"
    if [ -f .env ]; then
        export $(cat .env | grep -v '^#' | xargs)
    fi
fi

echo "üìä Running spatial performance audit..."
echo ""

# Run the audit script
ts-node src/scripts/spatial-performance-audit.ts

# Check if audit completed successfully
if [ $? -eq 0 ]; then
    echo ""
    echo "‚úÖ Spatial performance audit completed successfully!"
    echo ""
    echo "üìã Report saved in reports/ directory"
    echo ""
    echo "üîß Quick Actions:"
    echo "  ‚Ä¢ Review critical issues first"
    echo "  ‚Ä¢ Run suggested migrations: pnpm run db:migrate"
    echo "  ‚Ä¢ Optimize tables: VACUUM ANALYZE on large tables"
    echo "  ‚Ä¢ Monitor query performance with EXPLAIN ANALYZE"
    echo ""
    echo "üìà Suggested Next Steps:"
    echo "  1. Address any critical performance issues"
    echo "  2. Implement recommended indexes"
    echo "  3. Schedule regular VACUUM and ANALYZE"
    echo "  4. Monitor spatial query patterns"
    echo "  5. Consider geometry simplification for web tiles"
else
    echo ""
    echo "‚ùå Spatial performance audit failed!"
    echo "Check the error messages above and ensure:"
    echo "  ‚Ä¢ Database is accessible"
    echo "  ‚Ä¢ PostGIS extension is installed"
    echo "  ‚Ä¢ Required permissions are available"
    exit 1
fi