{
  "version": "1.0",
  "permissions": {
    "allow": [
      "Bash(pnpm dev*)",
      "Bash(pnpm test*)",
      "Bash(pnpm build*)",
      "Bash(pnpm lint*)",
      "Bash(pnpm format*)",
      "Bash(pnpm add*)",
      "Bash(pnpm install)",
      "Bash(pnpm --filter*)",
      "Bash(git status)",
      "Bash(git diff*)",
      "Bash(git add*)",
      "Bash(git commit*)",
      "Bash(git push)",
      "Bash(git pull)",
      "Bash(git checkout*)",
      "Bash(git branch*)",
      "Bash(docker*)",
      "Bash(npm run*)",
      "Read(**/*)",
      "Edit(**/*.ts)",
      "Edit(**/*.tsx)",
      "Edit(**/*.js)",
      "Edit(**/*.jsx)",
      "Edit(**/*.json)",
      "Edit(**/*.md)",
      "Edit(**/*.yml)",
      "Edit(**/*.yaml)",
      "Edit(**/*.sql)",
      "Edit(**/*.sh)",
      "Write(**/*.ts)",
      "Write(**/*.tsx)",
      "Write(**/*.js)",
      "Write(**/*.jsx)",
      "Write(**/*.json)",
      "Write(**/*.md)",
      "Write(**/*.yml)",
      "Write(**/*.yaml)",
      "Write(**/*.sql)",
      "Write(**/*.test.*)",
      "MultiEdit(**/*)"
    ],
    "deny": [
      "Bash(rm -rf /)",
      "Bash(rm -rf ~)",
      "Bash(rm -rf .git)",
      "Bash(curl*)",
      "Bash(wget*)",
      "Bash(ssh*)",
      "Bash(sudo*)",
      "Write(.env)",
      "Write(.env.*)",
      "Write(**/*.pem)",
      "Write(**/*.key)",
      "Write(**/*.cert)",
      "Edit(.env)",
      "Edit(.env.*)",
      "Edit(**/*.pem)",
      "Edit(**/*.key)",
      "Edit(**/*.cert)"
    ]
  },
  "context": {
    "projectType": "monorepo",
    "packageManager": "pnpm",
    "primaryLanguage": "typescript",
    "framework": "react-native-web",
    "database": "postgresql-postgis",
    "testFramework": "jest",
    "linter": "eslint",
    "formatter": "prettier"
  },
  "shortcuts": {
    "dev": "pnpm dev",
    "test": "pnpm test",
    "build": "pnpm build",
    "lint": "pnpm lint",
    "format": "pnpm format",
    "migrate": "pnpm --filter @lrpdm/api db:migrate",
    "seed": "pnpm --filter @lrpdm/api db:seed"
  },
  "hooks": {
    "preCommit": "pnpm lint && pnpm test",
    "preBuild": "pnpm clean",
    "postBuild": "pnpm test:e2e"
  },
  "ai": {
    "preferredModel": "claude-3-5-sonnet",
    "contextWindow": "200k",
    "temperature": 0.2,
    "responseFormat": "markdown"
  }
}