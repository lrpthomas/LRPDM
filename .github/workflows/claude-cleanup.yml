name: Claude Cleanup Non-Working Workflows
on:
  workflow_dispatch:

jobs:
  cleanup:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Check Workflow Status
        run: |
          # Create a status report
          cat > workflow-status.txt << 'EOF'
          # Claude Workflow Status Report
          
          ## Fixed Workflows (Now using Python implementation):
          âœ… claude-orchestration.yml - Updated to use Python claude_agent.py
          âœ… issue-to-agent.yml - Updated to use Python claude_agent.py
          
          ## Implementation Details:
          - Location: .claude/scripts/claude_agent.py
          - Dependencies: anthropic, pyyaml
          - Command: python .claude/scripts/claude agent execute <agent_id>
          
          ## Requirements:
          - CLAUDE_API_KEY secret must be set in GitHub
          - Python 3.11+ required
          - Agent specs must exist in .claude/agents/specs/
          
          Last updated: $(date)
          EOF
          
          echo "âœ… Workflow status report created"
          cat workflow-status.txt
          
      - name: Close Stuck Issues
        uses: actions/github-script@v6
        with:
          script: |
            // Find issues that are stuck (no agent response after 1 hour)
            const issues = await github.rest.issues.listForRepo({
              owner: context.repo.owner,
              repo: context.repo.repo,
              labels: 'claude-agent',
              state: 'open',
              per_page: 100
            });
            
            const oneHourAgo = new Date(Date.now() - 60 * 60 * 1000);
            let closedCount = 0;
            
            for (const issue of issues.data) {
              if (new Date(issue.created_at) < oneHourAgo) {
                const comments = await github.rest.issues.listComments({
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  issue_number: issue.number
                });
                
                const hasAgentComment = comments.data.some(c => 
                  c.body.includes('Claude Agent') || c.body.includes('ðŸ¤–')
                );
                
                if (!hasAgentComment) {
                  // Add explanation comment
                  await github.rest.issues.createComment({
                    owner: context.repo.owner,
                    repo: context.repo.repo,
                    issue_number: issue.number,
                    body: `## ðŸ”§ Workflow Update Required
                    
                    This issue was created before the Claude agent system was properly configured. The original workflows used a non-existent CLI tool.
                    
                    **Status**: Closing this issue as the workflow has been updated.
                    
                    **To retry this task**:
                    1. Create a new issue with the same content
                    2. Make sure it has the \`claude-agent\` label
                    3. The enhanced agent workflow will process it
                    
                    *Closed by cleanup workflow*`
                  });
                  
                  // Close the issue
                  await github.rest.issues.update({
                    owner: context.repo.owner,
                    repo: context.repo.repo,
                    issue_number: issue.number,
                    state: 'closed',
                    labels: [...issue.labels.map(l => l.name), 'workflow-update-required']
                  });
                  
                  closedCount++;
                  
                  // Rate limit protection
                  await new Promise(resolve => setTimeout(resolve, 1000));
                }
              }
            }
            
            console.log(`Closed ${closedCount} stuck issues`);